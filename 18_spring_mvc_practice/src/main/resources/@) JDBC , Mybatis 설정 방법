
[ DB 연결정보 ] 


1. pom.xml파일에 의존성 추가

	spring-jdbc , 컨넥션 풀 라이브러리 , MYSQL 드라이버 , mybatis의존성을 추가한다.
	
		<!-- 컨넥션 풀 라이브러리 -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>								<!-- DB 컨넥션을 위한 라이브러리 -->
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>								<!-- MYSQL을 사용하기 위한 라이브러리 -->
		    <groupId>com.mysql</groupId>
		    <artifactId>mysql-connector-j</artifactId>
		    <version>8.0.32</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>								<!-- Mybatis를 사용하기 위한 라이브러리1 -->
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.3</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>								<!-- Mybatis를 사용하기 위한 라이브러리2 -->
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>2.0.3</version>
		</dependency>
		
		
2. root-context.xml파일을 수정한다.

		2-1) namespace추가 		xmlns:context="http://www.springframework.org/schema/context 
		2-2) schemaLocation추가 http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
			(주의 schemaLocation은 ""가 하나의 문자열)
		
		<?xml version="1.0" encoding="UTF-8"?>
		<beans xmlns="http://www.springframework.org/schema/beans"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xmlns:context="http://www.springframework.org/schema/context"																				
				xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
									http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">	
	
			<context:property-placeholder location="classpath:properties/jdbc.properties" />
			
			<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
				<property name="driver"   value="${jdbc.driverClassName}" />
				<property name="url"      value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</bean>
			
			<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
			  <property name="dataSource"      ref="dataSource" />
			  <property name="configLocation"  value="classpath:mybatis-config.xml"  />
			  <property name="mapperLocations" value="classpath:mappers/*.xml" />
			</bean >
			
			<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache"> 
				<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" /> 
			</bean>  
		</beans>
		
	
3. DB연동 관련 파일들을 생성한다. (주의 : 반드시 root-context.xml파일에 명시된대로 파일들이 위치에 있어야 한다.)
	
	3-1) src/main/resources 폴더에 properties 폴더를 생성하여 그 안에 jdbc.properties파일을 생성한뒤 아래의 내용을 작성한다.
	  	
		# Local DB
		jdbc.driverClassName=com.mysql.cj.jdbc.Driver
		jdbc.url=jdbc:mysql://localhost:3306/DB이름?serverTimezone=Asia/Seoul
		jdbc.username=root
		jdbc.password=1234

	3-2) src/main/resources 폴더에 mybatis-config.xml파일을 생성한뒤 아래의 내용을 작성한다. (주의 : 설정이 없어도 configuration 태그는 있어야 한다.)
	
		<?xml version="1.0" encoding="UTF-8"?>
		<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">	

		<configuration>
		
		</configuration>
		
	3-3) src/main/resources 폴더에 mappers폴더를 생성한뒤 xml파일을 생성하여 아래의 내용을 작성한다. (주의 : 쿼리가 없어도 mapper태그와 name스페이스는 지정되어 있어야 한다.)
	
	<?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="사용하고 싶은 이름">
	</mapper>
			

				